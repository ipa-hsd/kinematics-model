/*
 * generated by Xtext 2.26.0
 */
package de.fraunhofer.ipa.composition.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.fraunhofer.ipa.composition.ide.contentassist.antlr.internal.InternalCompositionParser;
import de.fraunhofer.ipa.composition.services.CompositionGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class CompositionParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(CompositionGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, CompositionGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getParameterValueAccess().getAlternatives(), "rule__ParameterValue__Alternatives");
			builder.put(grammarAccess.getParameterTypeAccess().getAlternatives(), "rule__ParameterType__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getJointTypeAccess().getAlternatives(), "rule__JointType__Alternatives");
			builder.put(grammarAccess.getComponentAccess().getGroup(), "rule__Component__Group__0");
			builder.put(grammarAccess.getComponentAccess().getGroup_4(), "rule__Component__Group_4__0");
			builder.put(grammarAccess.getComponentAccess().getGroup_4_3(), "rule__Component__Group_4_3__0");
			builder.put(grammarAccess.getComponentAccess().getGroup_5(), "rule__Component__Group_5__0");
			builder.put(grammarAccess.getComponentAccess().getGroup_5_3(), "rule__Component__Group_5_3__0");
			builder.put(grammarAccess.getComponentAccess().getGroup_6(), "rule__Component__Group_6__0");
			builder.put(grammarAccess.getComponentAccess().getGroup_6_3(), "rule__Component__Group_6_3__0");
			builder.put(grammarAccess.getComponentAccess().getGroup_7(), "rule__Component__Group_7__0");
			builder.put(grammarAccess.getComponentAccess().getGroup_7_3(), "rule__Component__Group_7_3__0");
			builder.put(grammarAccess.getComponentInstanceAccess().getGroup(), "rule__ComponentInstance__Group__0");
			builder.put(grammarAccess.getComponentInstanceAccess().getGroup_4(), "rule__ComponentInstance__Group_4__0");
			builder.put(grammarAccess.getComponentInstanceAccess().getGroup_4_3(), "rule__ComponentInstance__Group_4_3__0");
			builder.put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
			builder.put(grammarAccess.getParameterAccess().getGroup_5(), "rule__Parameter__Group_5__0");
			builder.put(grammarAccess.getParameterValue_ImplAccess().getGroup(), "rule__ParameterValue_Impl__Group__0");
			builder.put(grammarAccess.getParameterValue_ImplAccess().getGroup_3(), "rule__ParameterValue_Impl__Group_3__0");
			builder.put(grammarAccess.getParameterType_ImplAccess().getGroup(), "rule__ParameterType_Impl__Group__0");
			builder.put(grammarAccess.getLinkRefAccess().getGroup(), "rule__LinkRef__Group__0");
			builder.put(grammarAccess.getLinkRefAccess().getGroup_3(), "rule__LinkRef__Group_3__0");
			builder.put(grammarAccess.getLinkRefAccess().getGroup_4(), "rule__LinkRef__Group_4__0");
			builder.put(grammarAccess.getParameterPoseTypeAccess().getGroup(), "rule__ParameterPoseType__Group__0");
			builder.put(grammarAccess.getParameterStringTypeAccess().getGroup(), "rule__ParameterStringType__Group__0");
			builder.put(grammarAccess.getParameterLinkRefTypeAccess().getGroup(), "rule__ParameterLinkRefType__Group__0");
			builder.put(grammarAccess.getParameterInstanceAccess().getGroup(), "rule__ParameterInstance__Group__0");
			builder.put(grammarAccess.getJointAccess().getGroup(), "rule__Joint__Group__0");
			builder.put(grammarAccess.getJointAccess().getGroup_7(), "rule__Joint__Group_7__0");
			builder.put(grammarAccess.getJointAccess().getGroup_10(), "rule__Joint__Group_10__0");
			builder.put(grammarAccess.getJointAccess().getGroup_11(), "rule__Joint__Group_11__0");
			builder.put(grammarAccess.getLinkAccess().getGroup(), "rule__Link__Group__0");
			builder.put(grammarAccess.getPoseAccess().getGroup(), "rule__Pose__Group__0");
			builder.put(grammarAccess.getLimitAccess().getGroup(), "rule__Limit__Group__0");
			builder.put(grammarAccess.getLimitAccess().getGroup_6(), "rule__Limit__Group_6__0");
			builder.put(grammarAccess.getLimitAccess().getGroup_7(), "rule__Limit__Group_7__0");
			builder.put(grammarAccess.getAxisAccess().getGroup(), "rule__Axis__Group__0");
			builder.put(grammarAccess.getComponentAccess().getNameAssignment_3(), "rule__Component__NameAssignment_3");
			builder.put(grammarAccess.getComponentAccess().getParametersAssignment_4_2(), "rule__Component__ParametersAssignment_4_2");
			builder.put(grammarAccess.getComponentAccess().getParametersAssignment_4_3_1(), "rule__Component__ParametersAssignment_4_3_1");
			builder.put(grammarAccess.getComponentAccess().getLinksAssignment_5_2(), "rule__Component__LinksAssignment_5_2");
			builder.put(grammarAccess.getComponentAccess().getLinksAssignment_5_3_1(), "rule__Component__LinksAssignment_5_3_1");
			builder.put(grammarAccess.getComponentAccess().getJointsAssignment_6_2(), "rule__Component__JointsAssignment_6_2");
			builder.put(grammarAccess.getComponentAccess().getJointsAssignment_6_3_1(), "rule__Component__JointsAssignment_6_3_1");
			builder.put(grammarAccess.getComponentAccess().getComponentsAssignment_7_2(), "rule__Component__ComponentsAssignment_7_2");
			builder.put(grammarAccess.getComponentAccess().getComponentsAssignment_7_3_1(), "rule__Component__ComponentsAssignment_7_3_1");
			builder.put(grammarAccess.getComponentInstanceAccess().getTypeAssignment_3(), "rule__ComponentInstance__TypeAssignment_3");
			builder.put(grammarAccess.getComponentInstanceAccess().getParametersAssignment_4_2(), "rule__ComponentInstance__ParametersAssignment_4_2");
			builder.put(grammarAccess.getComponentInstanceAccess().getParametersAssignment_4_3_1(), "rule__ComponentInstance__ParametersAssignment_4_3_1");
			builder.put(grammarAccess.getParameterAccess().getNameAssignment_1(), "rule__Parameter__NameAssignment_1");
			builder.put(grammarAccess.getParameterAccess().getTypeAssignment_4(), "rule__Parameter__TypeAssignment_4");
			builder.put(grammarAccess.getParameterAccess().getValueAssignment_5_1(), "rule__Parameter__ValueAssignment_5_1");
			builder.put(grammarAccess.getParameterValue_ImplAccess().getValueAssignment_3_1(), "rule__ParameterValue_Impl__ValueAssignment_3_1");
			builder.put(grammarAccess.getLinkRefAccess().getValueAssignment_3_1(), "rule__LinkRef__ValueAssignment_3_1");
			builder.put(grammarAccess.getLinkRefAccess().getRefAssignment_4_1(), "rule__LinkRef__RefAssignment_4_1");
			builder.put(grammarAccess.getParameterInstanceAccess().getParameterAssignment_3(), "rule__ParameterInstance__ParameterAssignment_3");
			builder.put(grammarAccess.getParameterInstanceAccess().getValueAssignment_5(), "rule__ParameterInstance__ValueAssignment_5");
			builder.put(grammarAccess.getJointAccess().getNameAssignment_1(), "rule__Joint__NameAssignment_1");
			builder.put(grammarAccess.getJointAccess().getTypeAssignment_4(), "rule__Joint__TypeAssignment_4");
			builder.put(grammarAccess.getJointAccess().getParentAssignment_6(), "rule__Joint__ParentAssignment_6");
			builder.put(grammarAccess.getJointAccess().getChildAssignment_7_1(), "rule__Joint__ChildAssignment_7_1");
			builder.put(grammarAccess.getJointAccess().getOriginAssignment_9(), "rule__Joint__OriginAssignment_9");
			builder.put(grammarAccess.getJointAccess().getLimitAssignment_10_1(), "rule__Joint__LimitAssignment_10_1");
			builder.put(grammarAccess.getJointAccess().getAxisAssignment_11_1(), "rule__Joint__AxisAssignment_11_1");
			builder.put(grammarAccess.getLinkAccess().getNameAssignment_2(), "rule__Link__NameAssignment_2");
			builder.put(grammarAccess.getPoseAccess().getXAssignment_3(), "rule__Pose__XAssignment_3");
			builder.put(grammarAccess.getPoseAccess().getYAssignment_5(), "rule__Pose__YAssignment_5");
			builder.put(grammarAccess.getPoseAccess().getZAssignment_7(), "rule__Pose__ZAssignment_7");
			builder.put(grammarAccess.getPoseAccess().getRollAssignment_9(), "rule__Pose__RollAssignment_9");
			builder.put(grammarAccess.getPoseAccess().getPitchAssignment_11(), "rule__Pose__PitchAssignment_11");
			builder.put(grammarAccess.getPoseAccess().getYawAssignment_13(), "rule__Pose__YawAssignment_13");
			builder.put(grammarAccess.getLimitAccess().getEffortAssignment_3(), "rule__Limit__EffortAssignment_3");
			builder.put(grammarAccess.getLimitAccess().getVelocityAssignment_5(), "rule__Limit__VelocityAssignment_5");
			builder.put(grammarAccess.getLimitAccess().getLowerAssignment_6_1(), "rule__Limit__LowerAssignment_6_1");
			builder.put(grammarAccess.getLimitAccess().getUpperAssignment_7_1(), "rule__Limit__UpperAssignment_7_1");
			builder.put(grammarAccess.getAxisAccess().getXAssignment_3(), "rule__Axis__XAssignment_3");
			builder.put(grammarAccess.getAxisAccess().getYAssignment_5(), "rule__Axis__YAssignment_5");
			builder.put(grammarAccess.getAxisAccess().getZAssignment_7(), "rule__Axis__ZAssignment_7");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private CompositionGrammarAccess grammarAccess;

	@Override
	protected InternalCompositionParser createParser() {
		InternalCompositionParser result = new InternalCompositionParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public CompositionGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(CompositionGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
