/*
 * generated by Xtext 2.26.0
 */
grammar InternalComposition;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.fraunhofer.ipa.composition.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.fraunhofer.ipa.composition.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.fraunhofer.ipa.composition.services.CompositionGrammarAccess;

}

@parser::members {

 	private CompositionGrammarAccess grammarAccess;

    public InternalCompositionParser(TokenStream input, CompositionGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Component";
   	}

   	@Override
   	protected CompositionGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Component'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentAccess().getComponentKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='name'
		{
			newLeafNode(otherlv_2, grammarAccess.getComponentAccess().getNameKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_name_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='parameters'
			{
				newLeafNode(otherlv_4, grammarAccess.getComponentAccess().getParametersKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentAccess().getParametersParameterParserRuleCall_4_2_0());
					}
					lv_parameters_6_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_6_0,
							"de.fraunhofer.ipa.composition.Composition.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getComponentAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getComponentAccess().getParametersParameterParserRuleCall_4_3_1_0());
						}
						lv_parameters_8_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComponentRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_8_0,
								"de.fraunhofer.ipa.composition.Composition.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_10='links'
			{
				newLeafNode(otherlv_10, grammarAccess.getComponentAccess().getLinksKeyword_5_0());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentAccess().getLinksLinkParserRuleCall_5_2_0());
					}
					lv_links_12_0=ruleLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRule());
						}
						add(
							$current,
							"links",
							lv_links_12_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Link");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getComponentAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getComponentAccess().getLinksLinkParserRuleCall_5_3_1_0());
						}
						lv_links_14_0=ruleLink
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComponentRule());
							}
							add(
								$current,
								"links",
								lv_links_14_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.Link");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		(
			otherlv_16='joints'
			{
				newLeafNode(otherlv_16, grammarAccess.getComponentAccess().getJointsKeyword_6_0());
			}
			otherlv_17='{'
			{
				newLeafNode(otherlv_17, grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentAccess().getJointsJointParserRuleCall_6_2_0());
					}
					lv_joints_18_0=ruleJoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRule());
						}
						add(
							$current,
							"joints",
							lv_joints_18_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Joint");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_19=','
				{
					newLeafNode(otherlv_19, grammarAccess.getComponentAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getComponentAccess().getJointsJointParserRuleCall_6_3_1_0());
						}
						lv_joints_20_0=ruleJoint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComponentRule());
							}
							add(
								$current,
								"joints",
								lv_joints_20_0,
								"de.fraunhofer.ipa.kinematics.Kinematics.Joint");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_21='}'
			{
				newLeafNode(otherlv_21, grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		(
			otherlv_22='components'
			{
				newLeafNode(otherlv_22, grammarAccess.getComponentAccess().getComponentsKeyword_7_0());
			}
			otherlv_23='('
			{
				newLeafNode(otherlv_23, grammarAccess.getComponentAccess().getLeftParenthesisKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentAccess().getComponentsComponentInstanceParserRuleCall_7_2_0());
					}
					lv_components_24_0=ruleComponentInstance
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRule());
						}
						add(
							$current,
							"components",
							lv_components_24_0,
							"de.fraunhofer.ipa.composition.Composition.ComponentInstance");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_25=','
				{
					newLeafNode(otherlv_25, grammarAccess.getComponentAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getComponentAccess().getComponentsComponentInstanceParserRuleCall_7_3_1_0());
						}
						lv_components_26_0=ruleComponentInstance
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComponentRule());
							}
							add(
								$current,
								"components",
								lv_components_26_0,
								"de.fraunhofer.ipa.composition.Composition.ComponentInstance");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_27=')'
			{
				newLeafNode(otherlv_27, grammarAccess.getComponentAccess().getRightParenthesisKeyword_7_4());
			}
		)?
		otherlv_28='}'
		{
			newLeafNode(otherlv_28, grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleComponentInstance
entryRuleComponentInstance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentInstanceRule()); }
	iv_ruleComponentInstance=ruleComponentInstance
	{ $current=$iv_ruleComponentInstance.current; }
	EOF;

// Rule ComponentInstance
ruleComponentInstance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ComponentInstance'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentInstanceAccess().getComponentInstanceKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getComponentInstanceAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='type'
		{
			newLeafNode(otherlv_2, grammarAccess.getComponentInstanceAccess().getTypeKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentInstanceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getComponentInstanceAccess().getTypeComponentCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='parameters'
			{
				newLeafNode(otherlv_4, grammarAccess.getComponentInstanceAccess().getParametersKeyword_4_0());
			}
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getComponentInstanceAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentInstanceAccess().getParametersParameterInstanceParserRuleCall_4_2_0());
					}
					lv_parameters_6_0=ruleParameterInstance
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentInstanceRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_6_0,
							"de.fraunhofer.ipa.composition.Composition.ParameterInstance");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getComponentInstanceAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getComponentInstanceAccess().getParametersParameterInstanceParserRuleCall_4_3_1_0());
						}
						lv_parameters_8_0=ruleParameterInstance
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComponentInstanceRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_8_0,
								"de.fraunhofer.ipa.composition.Composition.ParameterInstance");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getComponentInstanceAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getComponentInstanceAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleParameterValue
entryRuleParameterValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterValueRule()); }
	iv_ruleParameterValue=ruleParameterValue
	{ $current=$iv_ruleParameterValue.current; }
	EOF;

// Rule ParameterValue
ruleParameterValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getParameterValueAccess().getParameterValue_ImplParserRuleCall_0());
		}
		this_ParameterValue_Impl_0=ruleParameterValue_Impl
		{
			$current = $this_ParameterValue_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterValueAccess().getLinkRefParserRuleCall_1());
		}
		this_LinkRef_1=ruleLinkRef
		{
			$current = $this_LinkRef_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParameterType
entryRuleParameterType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterTypeRule()); }
	iv_ruleParameterType=ruleParameterType
	{ $current=$iv_ruleParameterType.current; }
	EOF;

// Rule ParameterType
ruleParameterType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getParameterTypeAccess().getParameterType_ImplParserRuleCall_0());
		}
		this_ParameterType_Impl_0=ruleParameterType_Impl
		{
			$current = $this_ParameterType_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterTypeAccess().getParameterPoseTypeParserRuleCall_1());
		}
		this_ParameterPoseType_1=ruleParameterPoseType
		{
			$current = $this_ParameterPoseType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterTypeAccess().getParameterStringTypeParserRuleCall_2());
		}
		this_ParameterStringType_2=ruleParameterStringType
		{
			$current = $this_ParameterStringType_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterTypeAccess().getParameterLinkRefTypeParserRuleCall_3());
		}
		this_ParameterLinkRefType_3=ruleParameterLinkRefType
		{
			$current = $this_ParameterLinkRefType_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Parameter'
		{
			newLeafNode(otherlv_0, grammarAccess.getParameterAccess().getParameterKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getParameterAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getTypeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getTypeParameterTypeParserRuleCall_4_0());
				}
				lv_type_4_0=ruleParameterType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"de.fraunhofer.ipa.composition.Composition.ParameterType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='value'
			{
				newLeafNode(otherlv_5, grammarAccess.getParameterAccess().getValueKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getValueParameterValueParserRuleCall_5_1_0());
					}
					lv_value_6_0=ruleParameterValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"value",
							lv_value_6_0,
							"de.fraunhofer.ipa.composition.Composition.ParameterValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getParameterAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleParameterValue_Impl
entryRuleParameterValue_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterValue_ImplRule()); }
	iv_ruleParameterValue_Impl=ruleParameterValue_Impl
	{ $current=$iv_ruleParameterValue_Impl.current; }
	EOF;

// Rule ParameterValue_Impl
ruleParameterValue_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterValue_ImplAccess().getParameterValueAction_0(),
					$current);
			}
		)
		otherlv_1='ParameterValue'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterValue_ImplAccess().getParameterValueKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getParameterValue_ImplAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='value'
			{
				newLeafNode(otherlv_3, grammarAccess.getParameterValue_ImplAccess().getValueKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterValue_ImplAccess().getValueEStringParserRuleCall_3_1_0());
					}
					lv_value_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterValue_ImplRule());
						}
						set(
							$current,
							"value",
							lv_value_4_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getParameterValue_ImplAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleParameterType_Impl
entryRuleParameterType_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterType_ImplRule()); }
	iv_ruleParameterType_Impl=ruleParameterType_Impl
	{ $current=$iv_ruleParameterType_Impl.current; }
	EOF;

// Rule ParameterType_Impl
ruleParameterType_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterType_ImplAccess().getParameterTypeAction_0(),
					$current);
			}
		)
		otherlv_1='ParameterType'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterType_ImplAccess().getParameterTypeKeyword_1());
		}
	)
;

// Entry rule entryRuleLinkRef
entryRuleLinkRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkRefRule()); }
	iv_ruleLinkRef=ruleLinkRef
	{ $current=$iv_ruleLinkRef.current; }
	EOF;

// Rule LinkRef
ruleLinkRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLinkRefAccess().getLinkRefAction_0(),
					$current);
			}
		)
		otherlv_1='LinkRef'
		{
			newLeafNode(otherlv_1, grammarAccess.getLinkRefAccess().getLinkRefKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getLinkRefAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='value'
			{
				newLeafNode(otherlv_3, grammarAccess.getLinkRefAccess().getValueKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkRefAccess().getValueEStringParserRuleCall_3_1_0());
					}
					lv_value_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkRefRule());
						}
						set(
							$current,
							"value",
							lv_value_4_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='ref'
			{
				newLeafNode(otherlv_5, grammarAccess.getLinkRefAccess().getRefKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLinkRefRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getLinkRefAccess().getRefLinkCrossReference_4_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getLinkRefAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleParameterPoseType
entryRuleParameterPoseType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterPoseTypeRule()); }
	iv_ruleParameterPoseType=ruleParameterPoseType
	{ $current=$iv_ruleParameterPoseType.current; }
	EOF;

// Rule ParameterPoseType
ruleParameterPoseType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterPoseTypeAccess().getParameterPoseTypeAction_0(),
					$current);
			}
		)
		otherlv_1='ParameterPoseType'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterPoseTypeAccess().getParameterPoseTypeKeyword_1());
		}
	)
;

// Entry rule entryRuleParameterStringType
entryRuleParameterStringType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterStringTypeRule()); }
	iv_ruleParameterStringType=ruleParameterStringType
	{ $current=$iv_ruleParameterStringType.current; }
	EOF;

// Rule ParameterStringType
ruleParameterStringType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterStringTypeAccess().getParameterStringTypeAction_0(),
					$current);
			}
		)
		otherlv_1='ParameterStringType'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterStringTypeAccess().getParameterStringTypeKeyword_1());
		}
	)
;

// Entry rule entryRuleParameterLinkRefType
entryRuleParameterLinkRefType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterLinkRefTypeRule()); }
	iv_ruleParameterLinkRefType=ruleParameterLinkRefType
	{ $current=$iv_ruleParameterLinkRefType.current; }
	EOF;

// Rule ParameterLinkRefType
ruleParameterLinkRefType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterLinkRefTypeAccess().getParameterLinkRefTypeAction_0(),
					$current);
			}
		)
		otherlv_1='ParameterLinkRefType'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterLinkRefTypeAccess().getParameterLinkRefTypeKeyword_1());
		}
	)
;

// Entry rule entryRuleParameterInstance
entryRuleParameterInstance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterInstanceRule()); }
	iv_ruleParameterInstance=ruleParameterInstance
	{ $current=$iv_ruleParameterInstance.current; }
	EOF;

// Rule ParameterInstance
ruleParameterInstance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ParameterInstance'
		{
			newLeafNode(otherlv_0, grammarAccess.getParameterInstanceAccess().getParameterInstanceKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterInstanceAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='parameter'
		{
			newLeafNode(otherlv_2, grammarAccess.getParameterInstanceAccess().getParameterKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterInstanceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getParameterInstanceAccess().getParameterParameterCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='value'
		{
			newLeafNode(otherlv_4, grammarAccess.getParameterInstanceAccess().getValueKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterInstanceAccess().getValueParameterValueParserRuleCall_5_0());
				}
				lv_value_5_0=ruleParameterValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterInstanceRule());
					}
					set(
						$current,
						"value",
						lv_value_5_0,
						"de.fraunhofer.ipa.composition.Composition.ParameterValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getParameterInstanceAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleJoint
entryRuleJoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJointRule()); }
	iv_ruleJoint=ruleJoint
	{ $current=$iv_ruleJoint.current; }
	EOF;

// Rule Joint
ruleJoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Joint'
		{
			newLeafNode(otherlv_0, grammarAccess.getJointAccess().getJointKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJointAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getJointAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getJointAccess().getTypeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJointAccess().getTypeJointTypeEnumRuleCall_4_0());
				}
				lv_type_4_0=ruleJointType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.JointType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='parent'
		{
			newLeafNode(otherlv_5, grammarAccess.getJointAccess().getParentKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJointRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getJointAccess().getParentLinkCrossReference_6_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7='child'
			{
				newLeafNode(otherlv_7, grammarAccess.getJointAccess().getChildKeyword_7_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJointRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getJointAccess().getChildLinkCrossReference_7_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9='origin'
		{
			newLeafNode(otherlv_9, grammarAccess.getJointAccess().getOriginKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJointAccess().getOriginPoseParserRuleCall_9_0());
				}
				lv_origin_10_0=rulePose
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointRule());
					}
					set(
						$current,
						"origin",
						lv_origin_10_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.Pose");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_11='limit'
			{
				newLeafNode(otherlv_11, grammarAccess.getJointAccess().getLimitKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getLimitLimitParserRuleCall_10_1_0());
					}
					lv_limit_12_0=ruleLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"limit",
							lv_limit_12_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Limit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_13='axis'
			{
				newLeafNode(otherlv_13, grammarAccess.getJointAccess().getAxisKeyword_11_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getAxisAxisParserRuleCall_11_1_0());
					}
					lv_axis_14_0=ruleAxis
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"axis",
							lv_axis_14_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.Axis");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getJointAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	iv_ruleLink=ruleLink
	{ $current=$iv_ruleLink.current; }
	EOF;

// Rule Link
ruleLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLinkAccess().getLinkAction_0(),
					$current);
			}
		)
		otherlv_1='Link'
		{
			newLeafNode(otherlv_1, grammarAccess.getLinkAccess().getLinkKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePose
entryRulePose returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPoseRule()); }
	iv_rulePose=rulePose
	{ $current=$iv_rulePose.current; }
	EOF;

// Rule Pose
rulePose returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Pose'
		{
			newLeafNode(otherlv_0, grammarAccess.getPoseAccess().getPoseKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getPoseAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='x'
		{
			newLeafNode(otherlv_2, grammarAccess.getPoseAccess().getXKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPoseAccess().getXEDoubleParserRuleCall_3_0());
				}
				lv_x_3_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoseRule());
					}
					set(
						$current,
						"x",
						lv_x_3_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='y'
		{
			newLeafNode(otherlv_4, grammarAccess.getPoseAccess().getYKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPoseAccess().getYEDoubleParserRuleCall_5_0());
				}
				lv_y_5_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoseRule());
					}
					set(
						$current,
						"y",
						lv_y_5_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='z'
		{
			newLeafNode(otherlv_6, grammarAccess.getPoseAccess().getZKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPoseAccess().getZEDoubleParserRuleCall_7_0());
				}
				lv_z_7_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoseRule());
					}
					set(
						$current,
						"z",
						lv_z_7_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='roll'
		{
			newLeafNode(otherlv_8, grammarAccess.getPoseAccess().getRollKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPoseAccess().getRollEDoubleParserRuleCall_9_0());
				}
				lv_roll_9_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoseRule());
					}
					set(
						$current,
						"roll",
						lv_roll_9_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='pitch'
		{
			newLeafNode(otherlv_10, grammarAccess.getPoseAccess().getPitchKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPoseAccess().getPitchEDoubleParserRuleCall_11_0());
				}
				lv_pitch_11_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoseRule());
					}
					set(
						$current,
						"pitch",
						lv_pitch_11_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12='yaw'
		{
			newLeafNode(otherlv_12, grammarAccess.getPoseAccess().getYawKeyword_12());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPoseAccess().getYawEDoubleParserRuleCall_13_0());
				}
				lv_yaw_13_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoseRule());
					}
					set(
						$current,
						"yaw",
						lv_yaw_13_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getPoseAccess().getRightCurlyBracketKeyword_14());
		}
	)
;

// Entry rule entryRuleLimit
entryRuleLimit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLimitRule()); }
	iv_ruleLimit=ruleLimit
	{ $current=$iv_ruleLimit.current; }
	EOF;

// Rule Limit
ruleLimit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Limit'
		{
			newLeafNode(otherlv_0, grammarAccess.getLimitAccess().getLimitKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLimitAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='effort'
		{
			newLeafNode(otherlv_2, grammarAccess.getLimitAccess().getEffortKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLimitAccess().getEffortEDoubleParserRuleCall_3_0());
				}
				lv_effort_3_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLimitRule());
					}
					set(
						$current,
						"effort",
						lv_effort_3_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='velocity'
		{
			newLeafNode(otherlv_4, grammarAccess.getLimitAccess().getVelocityKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLimitAccess().getVelocityEDoubleParserRuleCall_5_0());
				}
				lv_velocity_5_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLimitRule());
					}
					set(
						$current,
						"velocity",
						lv_velocity_5_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='lower'
			{
				newLeafNode(otherlv_6, grammarAccess.getLimitAccess().getLowerKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitAccess().getLowerEDoubleParserRuleCall_6_1_0());
					}
					lv_lower_7_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitRule());
						}
						set(
							$current,
							"lower",
							lv_lower_7_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='upper'
			{
				newLeafNode(otherlv_8, grammarAccess.getLimitAccess().getUpperKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitAccess().getUpperEDoubleParserRuleCall_7_1_0());
					}
					lv_upper_9_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitRule());
						}
						set(
							$current,
							"upper",
							lv_upper_9_0,
							"de.fraunhofer.ipa.kinematics.Kinematics.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getLimitAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleAxis
entryRuleAxis returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAxisRule()); }
	iv_ruleAxis=ruleAxis
	{ $current=$iv_ruleAxis.current; }
	EOF;

// Rule Axis
ruleAxis returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Axis'
		{
			newLeafNode(otherlv_0, grammarAccess.getAxisAccess().getAxisKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAxisAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='x'
		{
			newLeafNode(otherlv_2, grammarAccess.getAxisAccess().getXKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAxisAccess().getXEDoubleParserRuleCall_3_0());
				}
				lv_x_3_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAxisRule());
					}
					set(
						$current,
						"x",
						lv_x_3_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='y'
		{
			newLeafNode(otherlv_4, grammarAccess.getAxisAccess().getYKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAxisAccess().getYEDoubleParserRuleCall_5_0());
				}
				lv_y_5_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAxisRule());
					}
					set(
						$current,
						"y",
						lv_y_5_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='z'
		{
			newLeafNode(otherlv_6, grammarAccess.getAxisAccess().getZKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAxisAccess().getZEDoubleParserRuleCall_7_0());
				}
				lv_z_7_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAxisRule());
					}
					set(
						$current,
						"z",
						lv_z_7_0,
						"de.fraunhofer.ipa.kinematics.Kinematics.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getAxisAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_DOUBLE_0=RULE_DOUBLE
	{
		$current.merge(this_DOUBLE_0);
	}
	{
		newLeafNode(this_DOUBLE_0, grammarAccess.getEDoubleAccess().getDOUBLETerminalRuleCall());
	}
;

// Rule JointType
ruleJointType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='fixed'
			{
				$current = grammarAccess.getJointTypeAccess().getFixedEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getJointTypeAccess().getFixedEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='prismatic'
			{
				$current = grammarAccess.getJointTypeAccess().getPrismaticEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getJointTypeAccess().getPrismaticEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='revolute'
			{
				$current = grammarAccess.getJointTypeAccess().getRevoluteEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getJointTypeAccess().getRevoluteEnumLiteralDeclaration_2());
			}
		)
	)
;

fragment RULE_DIGIT : '0'..'9';

RULE_BOOLEAN : ('true'|'false');

RULE_DOUBLE : RULE_DECINT ('.' RULE_DIGIT*|('.' RULE_DIGIT*)? ('E'|'e') ('-'|'+')? RULE_DECINT);

RULE_DECINT : ('0'|'1'..'9' RULE_DIGIT*|'-' '0'..'9' RULE_DIGIT*);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
