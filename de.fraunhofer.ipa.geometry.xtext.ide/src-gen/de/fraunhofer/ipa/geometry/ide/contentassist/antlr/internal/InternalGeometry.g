/*
 * generated by Xtext 2.26.0
 */
grammar InternalGeometry;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.fraunhofer.ipa.geometry.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.fraunhofer.ipa.geometry.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.fraunhofer.ipa.geometry.services.GeometryGrammarAccess;

}
@parser::members {
	private GeometryGrammarAccess grammarAccess;

	public void setGrammarAccess(GeometryGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleLinkGeometry
entryRuleLinkGeometry
:
{ before(grammarAccess.getLinkGeometryRule()); }
	 ruleLinkGeometry
{ after(grammarAccess.getLinkGeometryRule()); } 
	 EOF 
;

// Rule LinkGeometry
ruleLinkGeometry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkGeometryAccess().getGroup()); }
		(rule__LinkGeometry__Group__0)
		{ after(grammarAccess.getLinkGeometryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVisual
entryRuleVisual
:
{ before(grammarAccess.getVisualRule()); }
	 ruleVisual
{ after(grammarAccess.getVisualRule()); } 
	 EOF 
;

// Rule Visual
ruleVisual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVisualAccess().getGroup()); }
		(rule__Visual__Group__0)
		{ after(grammarAccess.getVisualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollision
entryRuleCollision
:
{ before(grammarAccess.getCollisionRule()); }
	 ruleCollision
{ after(grammarAccess.getCollisionRule()); } 
	 EOF 
;

// Rule Collision
ruleCollision 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollisionAccess().getGroup()); }
		(rule__Collision__Group__0)
		{ after(grammarAccess.getCollisionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePose
entryRulePose
:
{ before(grammarAccess.getPoseRule()); }
	 rulePose
{ after(grammarAccess.getPoseRule()); } 
	 EOF 
;

// Rule Pose
rulePose 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPoseAccess().getGroup()); }
		(rule__Pose__Group__0)
		{ after(grammarAccess.getPoseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeometry
entryRuleGeometry
:
{ before(grammarAccess.getGeometryRule()); }
	 ruleGeometry
{ after(grammarAccess.getGeometryRule()); } 
	 EOF 
;

// Rule Geometry
ruleGeometry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeometryAccess().getGroup()); }
		(rule__Geometry__Group__0)
		{ after(grammarAccess.getGeometryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleString0
entryRuleString0
:
{ before(grammarAccess.getString0Rule()); }
	 ruleString0
{ after(grammarAccess.getString0Rule()); } 
	 EOF 
;

// Rule String0
ruleString0 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getString0Access().getStringKeyword()); }
		'String'
		{ after(grammarAccess.getString0Access().getStringKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBox
entryRuleBox
:
{ before(grammarAccess.getBoxRule()); }
	 ruleBox
{ after(grammarAccess.getBoxRule()); } 
	 EOF 
;

// Rule Box
ruleBox 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoxAccess().getGroup()); }
		(rule__Box__Group__0)
		{ after(grammarAccess.getBoxAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCylinder
entryRuleCylinder
:
{ before(grammarAccess.getCylinderRule()); }
	 ruleCylinder
{ after(grammarAccess.getCylinderRule()); } 
	 EOF 
;

// Rule Cylinder
ruleCylinder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCylinderAccess().getGroup()); }
		(rule__Cylinder__Group__0)
		{ after(grammarAccess.getCylinderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMesh
entryRuleMesh
:
{ before(grammarAccess.getMeshRule()); }
	 ruleMesh
{ after(grammarAccess.getMeshRule()); } 
	 EOF 
;

// Rule Mesh
ruleMesh 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMeshAccess().getGroup()); }
		(rule__Mesh__Group__0)
		{ after(grammarAccess.getMeshAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSphere
entryRuleSphere
:
{ before(grammarAccess.getSphereRule()); }
	 ruleSphere
{ after(grammarAccess.getSphereRule()); } 
	 EOF 
;

// Rule Sphere
ruleSphere 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSphereAccess().getGroup()); }
		(rule__Sphere__Group__0)
		{ after(grammarAccess.getSphereAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDouble0
entryRuleDouble0
:
{ before(grammarAccess.getDouble0Rule()); }
	 ruleDouble0
{ after(grammarAccess.getDouble0Rule()); } 
	 EOF 
;

// Rule Double0
ruleDouble0 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDouble0Access().getDOUBLETerminalRuleCall()); }
		RULE_DOUBLE
		{ after(grammarAccess.getDouble0Access().getDOUBLETerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkGeometry__Group__0__Impl
	rule__LinkGeometry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkGeometryAccess().getLinkGeometryKeyword_0()); }
	'LinkGeometry'
	{ after(grammarAccess.getLinkGeometryAccess().getLinkGeometryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkGeometry__Group__1__Impl
	rule__LinkGeometry__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkGeometryAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getLinkGeometryAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkGeometry__Group__2__Impl
	rule__LinkGeometry__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkGeometryAccess().getRefKeyword_2()); }
	'ref'
	{ after(grammarAccess.getLinkGeometryAccess().getRefKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkGeometry__Group__3__Impl
	rule__LinkGeometry__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkGeometryAccess().getRefAssignment_3()); }
	(rule__LinkGeometry__RefAssignment_3)
	{ after(grammarAccess.getLinkGeometryAccess().getRefAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkGeometry__Group__4__Impl
	rule__LinkGeometry__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkGeometryAccess().getGroup_4()); }
	(rule__LinkGeometry__Group_4__0)?
	{ after(grammarAccess.getLinkGeometryAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkGeometry__Group__5__Impl
	rule__LinkGeometry__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkGeometryAccess().getGroup_5()); }
	(rule__LinkGeometry__Group_5__0)?
	{ after(grammarAccess.getLinkGeometryAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkGeometry__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkGeometryAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getLinkGeometryAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinkGeometry__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkGeometry__Group_4__0__Impl
	rule__LinkGeometry__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkGeometryAccess().getVisualKeyword_4_0()); }
	'visual'
	{ after(grammarAccess.getLinkGeometryAccess().getVisualKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkGeometry__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkGeometryAccess().getVisualAssignment_4_1()); }
	(rule__LinkGeometry__VisualAssignment_4_1)
	{ after(grammarAccess.getLinkGeometryAccess().getVisualAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinkGeometry__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkGeometry__Group_5__0__Impl
	rule__LinkGeometry__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkGeometryAccess().getCollisionKeyword_5_0()); }
	'collision'
	{ after(grammarAccess.getLinkGeometryAccess().getCollisionKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkGeometry__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkGeometryAccess().getCollisionAssignment_5_1()); }
	(rule__LinkGeometry__CollisionAssignment_5_1)
	{ after(grammarAccess.getLinkGeometryAccess().getCollisionAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__0__Impl
	rule__Visual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getVisualAction_0()); }
	()
	{ after(grammarAccess.getVisualAccess().getVisualAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__1__Impl
	rule__Visual__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getVisualKeyword_1()); }
	'Visual'
	{ after(grammarAccess.getVisualAccess().getVisualKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__2__Impl
	rule__Visual__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getVisualAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__3__Impl
	rule__Visual__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGroup_3()); }
	(rule__Visual__Group_3__0)?
	{ after(grammarAccess.getVisualAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__4__Impl
	rule__Visual__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGroup_4()); }
	(rule__Visual__Group_4__0)?
	{ after(grammarAccess.getVisualAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getVisualAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visual__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group_3__0__Impl
	rule__Visual__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getOriginKeyword_3_0()); }
	'origin'
	{ after(grammarAccess.getVisualAccess().getOriginKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getOriginAssignment_3_1()); }
	(rule__Visual__OriginAssignment_3_1)
	{ after(grammarAccess.getVisualAccess().getOriginAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visual__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group_4__0__Impl
	rule__Visual__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGeometryKeyword_4_0()); }
	'geometry'
	{ after(grammarAccess.getVisualAccess().getGeometryKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGeometryAssignment_4_1()); }
	(rule__Visual__GeometryAssignment_4_1)
	{ after(grammarAccess.getVisualAccess().getGeometryAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Collision__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__0__Impl
	rule__Collision__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getCollisionAction_0()); }
	()
	{ after(grammarAccess.getCollisionAccess().getCollisionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__1__Impl
	rule__Collision__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getCollisionKeyword_1()); }
	'Collision'
	{ after(grammarAccess.getCollisionAccess().getCollisionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__2__Impl
	rule__Collision__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getCollisionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__3__Impl
	rule__Collision__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGroup_3()); }
	(rule__Collision__Group_3__0)?
	{ after(grammarAccess.getCollisionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__4__Impl
	rule__Collision__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGroup_4()); }
	(rule__Collision__Group_4__0)?
	{ after(grammarAccess.getCollisionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getCollisionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Collision__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group_3__0__Impl
	rule__Collision__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getOriginKeyword_3_0()); }
	'origin'
	{ after(grammarAccess.getCollisionAccess().getOriginKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getOriginAssignment_3_1()); }
	(rule__Collision__OriginAssignment_3_1)
	{ after(grammarAccess.getCollisionAccess().getOriginAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Collision__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group_4__0__Impl
	rule__Collision__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGeometryKeyword_4_0()); }
	'geometry'
	{ after(grammarAccess.getCollisionAccess().getGeometryKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGeometryAssignment_4_1()); }
	(rule__Collision__GeometryAssignment_4_1)
	{ after(grammarAccess.getCollisionAccess().getGeometryAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pose__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__0__Impl
	rule__Pose__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getPoseKeyword_0()); }
	'Pose'
	{ after(grammarAccess.getPoseAccess().getPoseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__1__Impl
	rule__Pose__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getPoseAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__2__Impl
	rule__Pose__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getGroup_2()); }
	(rule__Pose__Group_2__0)?
	{ after(grammarAccess.getPoseAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__3__Impl
	rule__Pose__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getRpyKeyword_3()); }
	'rpy'
	{ after(grammarAccess.getPoseAccess().getRpyKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__4__Impl
	rule__Pose__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getRpyAssignment_4()); }
	(rule__Pose__RpyAssignment_4)
	{ after(grammarAccess.getPoseAccess().getRpyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__5__Impl
	rule__Pose__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getXyzKeyword_5()); }
	'xyz'
	{ after(grammarAccess.getPoseAccess().getXyzKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__6__Impl
	rule__Pose__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getXyzAssignment_6()); }
	(rule__Pose__XyzAssignment_6)
	{ after(grammarAccess.getPoseAccess().getXyzAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getPoseAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pose__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_2__0__Impl
	rule__Pose__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getValueKeyword_2_0()); }
	'value'
	{ after(grammarAccess.getPoseAccess().getValueKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pose__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPoseAccess().getValueAssignment_2_1()); }
	(rule__Pose__ValueAssignment_2_1)
	{ after(grammarAccess.getPoseAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__0__Impl
	rule__Geometry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGeometryAction_0()); }
	()
	{ after(grammarAccess.getGeometryAccess().getGeometryAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__1__Impl
	rule__Geometry__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGeometryKeyword_1()); }
	'Geometry'
	{ after(grammarAccess.getGeometryAccess().getGeometryKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__2__Impl
	rule__Geometry__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getGeometryAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__3__Impl
	rule__Geometry__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGroup_3()); }
	(rule__Geometry__Group_3__0)?
	{ after(grammarAccess.getGeometryAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__4__Impl
	rule__Geometry__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGroup_4()); }
	(rule__Geometry__Group_4__0)?
	{ after(grammarAccess.getGeometryAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__5__Impl
	rule__Geometry__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGroup_5()); }
	(rule__Geometry__Group_5__0)?
	{ after(grammarAccess.getGeometryAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__6__Impl
	rule__Geometry__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getGroup_6()); }
	(rule__Geometry__Group_6__0)?
	{ after(grammarAccess.getGeometryAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getGeometryAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_3__0__Impl
	rule__Geometry__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getBoxKeyword_3_0()); }
	'box'
	{ after(grammarAccess.getGeometryAccess().getBoxKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getBoxAssignment_3_1()); }
	(rule__Geometry__BoxAssignment_3_1)
	{ after(grammarAccess.getGeometryAccess().getBoxAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_4__0__Impl
	rule__Geometry__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getCylinderKeyword_4_0()); }
	'cylinder'
	{ after(grammarAccess.getGeometryAccess().getCylinderKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getCylinderAssignment_4_1()); }
	(rule__Geometry__CylinderAssignment_4_1)
	{ after(grammarAccess.getGeometryAccess().getCylinderAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_5__0__Impl
	rule__Geometry__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getMeshKeyword_5_0()); }
	'mesh'
	{ after(grammarAccess.getGeometryAccess().getMeshKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getMeshAssignment_5_1()); }
	(rule__Geometry__MeshAssignment_5_1)
	{ after(grammarAccess.getGeometryAccess().getMeshAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_6__0__Impl
	rule__Geometry__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getSphereKeyword_6_0()); }
	'sphere'
	{ after(grammarAccess.getGeometryAccess().getSphereKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometryAccess().getSphereAssignment_6_1()); }
	(rule__Geometry__SphereAssignment_6_1)
	{ after(grammarAccess.getGeometryAccess().getSphereAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__0__Impl
	rule__Box__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getBoxKeyword_0()); }
	'Box'
	{ after(grammarAccess.getBoxAccess().getBoxKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__1__Impl
	rule__Box__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBoxAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__2__Impl
	rule__Box__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getXKeyword_2()); }
	'x'
	{ after(grammarAccess.getBoxAccess().getXKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__3__Impl
	rule__Box__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getXAssignment_3()); }
	(rule__Box__XAssignment_3)
	{ after(grammarAccess.getBoxAccess().getXAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__4__Impl
	rule__Box__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getYKeyword_4()); }
	'y'
	{ after(grammarAccess.getBoxAccess().getYKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__5__Impl
	rule__Box__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getYAssignment_5()); }
	(rule__Box__YAssignment_5)
	{ after(grammarAccess.getBoxAccess().getYAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__6__Impl
	rule__Box__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getZKeyword_6()); }
	'z'
	{ after(grammarAccess.getBoxAccess().getZKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__7__Impl
	rule__Box__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getZAssignment_7()); }
	(rule__Box__ZAssignment_7)
	{ after(grammarAccess.getBoxAccess().getZAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getBoxAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cylinder__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__0__Impl
	rule__Cylinder__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getCylinderKeyword_0()); }
	'Cylinder'
	{ after(grammarAccess.getCylinderAccess().getCylinderKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__1__Impl
	rule__Cylinder__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCylinderAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__2__Impl
	rule__Cylinder__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getLengthKeyword_2()); }
	'length'
	{ after(grammarAccess.getCylinderAccess().getLengthKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__3__Impl
	rule__Cylinder__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getLengthAssignment_3()); }
	(rule__Cylinder__LengthAssignment_3)
	{ after(grammarAccess.getCylinderAccess().getLengthAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__4__Impl
	rule__Cylinder__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getRadiusKeyword_4()); }
	'radius'
	{ after(grammarAccess.getCylinderAccess().getRadiusKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__5__Impl
	rule__Cylinder__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getRadiusAssignment_5()); }
	(rule__Cylinder__RadiusAssignment_5)
	{ after(grammarAccess.getCylinderAccess().getRadiusAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getCylinderAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mesh__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__0__Impl
	rule__Mesh__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getMeshKeyword_0()); }
	'Mesh'
	{ after(grammarAccess.getMeshAccess().getMeshKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__1__Impl
	rule__Mesh__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getMeshAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__2__Impl
	rule__Mesh__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getFilenameKeyword_2()); }
	'filename'
	{ after(grammarAccess.getMeshAccess().getFilenameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__3__Impl
	rule__Mesh__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getFilenameAssignment_3()); }
	(rule__Mesh__FilenameAssignment_3)
	{ after(grammarAccess.getMeshAccess().getFilenameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__4__Impl
	rule__Mesh__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getGroup_4()); }
	(rule__Mesh__Group_4__0)?
	{ after(grammarAccess.getMeshAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getMeshAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mesh__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group_4__0__Impl
	rule__Mesh__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getScaleKeyword_4_0()); }
	'scale'
	{ after(grammarAccess.getMeshAccess().getScaleKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getScaleAssignment_4_1()); }
	(rule__Mesh__ScaleAssignment_4_1)
	{ after(grammarAccess.getMeshAccess().getScaleAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sphere__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__0__Impl
	rule__Sphere__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getSphereKeyword_0()); }
	'Sphere'
	{ after(grammarAccess.getSphereAccess().getSphereKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__1__Impl
	rule__Sphere__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSphereAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__2__Impl
	rule__Sphere__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getRadiusKeyword_2()); }
	'radius'
	{ after(grammarAccess.getSphereAccess().getRadiusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__3__Impl
	rule__Sphere__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getRadiusAssignment_3()); }
	(rule__Sphere__RadiusAssignment_3)
	{ after(grammarAccess.getSphereAccess().getRadiusAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSphereAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinkGeometry__RefAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkGeometryAccess().getRefLinkCrossReference_3_0()); }
		(
			{ before(grammarAccess.getLinkGeometryAccess().getRefLinkEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getLinkGeometryAccess().getRefLinkEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getLinkGeometryAccess().getRefLinkCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__VisualAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkGeometryAccess().getVisualVisualParserRuleCall_4_1_0()); }
		ruleVisual
		{ after(grammarAccess.getLinkGeometryAccess().getVisualVisualParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkGeometry__CollisionAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkGeometryAccess().getCollisionCollisionParserRuleCall_5_1_0()); }
		ruleCollision
		{ after(grammarAccess.getLinkGeometryAccess().getCollisionCollisionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__OriginAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getOriginPoseParserRuleCall_3_1_0()); }
		rulePose
		{ after(grammarAccess.getVisualAccess().getOriginPoseParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__GeometryAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_4_1_0()); }
		ruleGeometry
		{ after(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__OriginAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollisionAccess().getOriginPoseParserRuleCall_3_1_0()); }
		rulePose
		{ after(grammarAccess.getCollisionAccess().getOriginPoseParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__GeometryAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_4_1_0()); }
		ruleGeometry
		{ after(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPoseAccess().getValueString0ParserRuleCall_2_1_0()); }
		ruleString0
		{ after(grammarAccess.getPoseAccess().getValueString0ParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__RpyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPoseAccess().getRpyString0ParserRuleCall_4_0()); }
		ruleString0
		{ after(grammarAccess.getPoseAccess().getRpyString0ParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pose__XyzAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPoseAccess().getXyzString0ParserRuleCall_6_0()); }
		ruleString0
		{ after(grammarAccess.getPoseAccess().getXyzString0ParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__BoxAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getBoxBoxParserRuleCall_3_1_0()); }
		ruleBox
		{ after(grammarAccess.getGeometryAccess().getBoxBoxParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__CylinderAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getCylinderCylinderParserRuleCall_4_1_0()); }
		ruleCylinder
		{ after(grammarAccess.getGeometryAccess().getCylinderCylinderParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__MeshAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getMeshMeshParserRuleCall_5_1_0()); }
		ruleMesh
		{ after(grammarAccess.getGeometryAccess().getMeshMeshParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__SphereAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getSphereSphereParserRuleCall_6_1_0()); }
		ruleSphere
		{ after(grammarAccess.getGeometryAccess().getSphereSphereParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__XAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoxAccess().getXDouble0ParserRuleCall_3_0()); }
		ruleDouble0
		{ after(grammarAccess.getBoxAccess().getXDouble0ParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__YAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoxAccess().getYDouble0ParserRuleCall_5_0()); }
		ruleDouble0
		{ after(grammarAccess.getBoxAccess().getYDouble0ParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__ZAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoxAccess().getZDouble0ParserRuleCall_7_0()); }
		ruleDouble0
		{ after(grammarAccess.getBoxAccess().getZDouble0ParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__LengthAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCylinderAccess().getLengthDouble0ParserRuleCall_3_0()); }
		ruleDouble0
		{ after(grammarAccess.getCylinderAccess().getLengthDouble0ParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__RadiusAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCylinderAccess().getRadiusDouble0ParserRuleCall_5_0()); }
		ruleDouble0
		{ after(grammarAccess.getCylinderAccess().getRadiusDouble0ParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__FilenameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeshAccess().getFilenameString0ParserRuleCall_3_0()); }
		ruleString0
		{ after(grammarAccess.getMeshAccess().getFilenameString0ParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__ScaleAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeshAccess().getScaleDouble0ParserRuleCall_4_1_0()); }
		ruleDouble0
		{ after(grammarAccess.getMeshAccess().getScaleDouble0ParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__RadiusAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSphereAccess().getRadiusDouble0ParserRuleCall_3_0()); }
		ruleDouble0
		{ after(grammarAccess.getSphereAccess().getRadiusDouble0ParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

fragment RULE_DIGIT : '0'..'9';

RULE_BOOLEAN : ('true'|'false');

RULE_DOUBLE : RULE_DECINT ('.' RULE_DIGIT*|('.' RULE_DIGIT*)? ('E'|'e') ('-'|'+')? RULE_DECINT);

RULE_DECINT : ('0'|'1'..'9' RULE_DIGIT*|'-' '0'..'9' RULE_DIGIT*);

RULE_JOINTTYPE : ('revolute'|'continuous'|'prismatic'|'fixed'|'floating'|'planar');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
