/*
 * generated by Xtext 2.26.0
 */
grammar InternalGeometry;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.fraunhofer.ipa.geometry.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.fraunhofer.ipa.geometry.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.fraunhofer.ipa.geometry.services.GeometryGrammarAccess;

}

@parser::members {

 	private GeometryGrammarAccess grammarAccess;

    public InternalGeometryParser(TokenStream input, GeometryGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "LinkGeometry";
   	}

   	@Override
   	protected GeometryGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleLinkGeometry
entryRuleLinkGeometry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkGeometryRule()); }
	iv_ruleLinkGeometry=ruleLinkGeometry
	{ $current=$iv_ruleLinkGeometry.current; }
	EOF;

// Rule LinkGeometry
ruleLinkGeometry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LinkGeometry'
		{
			newLeafNode(otherlv_0, grammarAccess.getLinkGeometryAccess().getLinkGeometryKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLinkGeometryAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='ref'
		{
			newLeafNode(otherlv_2, grammarAccess.getLinkGeometryAccess().getRefKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkGeometryRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getLinkGeometryAccess().getRefLinkCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='visual'
			{
				newLeafNode(otherlv_4, grammarAccess.getLinkGeometryAccess().getVisualKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkGeometryAccess().getVisualVisualParserRuleCall_4_1_0());
					}
					lv_visual_5_0=ruleVisual
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkGeometryRule());
						}
						set(
							$current,
							"visual",
							lv_visual_5_0,
							"de.fraunhofer.ipa.geometry.Geometry.Visual");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='collision'
			{
				newLeafNode(otherlv_6, grammarAccess.getLinkGeometryAccess().getCollisionKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkGeometryAccess().getCollisionCollisionParserRuleCall_5_1_0());
					}
					lv_collision_7_0=ruleCollision
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkGeometryRule());
						}
						set(
							$current,
							"collision",
							lv_collision_7_0,
							"de.fraunhofer.ipa.geometry.Geometry.Collision");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getLinkGeometryAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleVisual
entryRuleVisual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVisualRule()); }
	iv_ruleVisual=ruleVisual
	{ $current=$iv_ruleVisual.current; }
	EOF;

// Rule Visual
ruleVisual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVisualAccess().getVisualAction_0(),
					$current);
			}
		)
		otherlv_1='Visual'
		{
			newLeafNode(otherlv_1, grammarAccess.getVisualAccess().getVisualKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getVisualAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='origin'
			{
				newLeafNode(otherlv_3, grammarAccess.getVisualAccess().getOriginKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVisualAccess().getOriginPoseParserRuleCall_3_1_0());
					}
					lv_origin_4_0=rulePose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVisualRule());
						}
						set(
							$current,
							"origin",
							lv_origin_4_0,
							"de.fraunhofer.ipa.geometry.Geometry.Pose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='geometry'
			{
				newLeafNode(otherlv_5, grammarAccess.getVisualAccess().getGeometryKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_4_1_0());
					}
					lv_geometry_6_0=ruleGeometry
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVisualRule());
						}
						set(
							$current,
							"geometry",
							lv_geometry_6_0,
							"de.fraunhofer.ipa.geometry.Geometry.Geometry");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getVisualAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleCollision
entryRuleCollision returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollisionRule()); }
	iv_ruleCollision=ruleCollision
	{ $current=$iv_ruleCollision.current; }
	EOF;

// Rule Collision
ruleCollision returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCollisionAccess().getCollisionAction_0(),
					$current);
			}
		)
		otherlv_1='Collision'
		{
			newLeafNode(otherlv_1, grammarAccess.getCollisionAccess().getCollisionKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCollisionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='origin'
			{
				newLeafNode(otherlv_3, grammarAccess.getCollisionAccess().getOriginKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollisionAccess().getOriginPoseParserRuleCall_3_1_0());
					}
					lv_origin_4_0=rulePose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollisionRule());
						}
						set(
							$current,
							"origin",
							lv_origin_4_0,
							"de.fraunhofer.ipa.geometry.Geometry.Pose");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='geometry'
			{
				newLeafNode(otherlv_5, grammarAccess.getCollisionAccess().getGeometryKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_4_1_0());
					}
					lv_geometry_6_0=ruleGeometry
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollisionRule());
						}
						set(
							$current,
							"geometry",
							lv_geometry_6_0,
							"de.fraunhofer.ipa.geometry.Geometry.Geometry");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getCollisionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRulePose
entryRulePose returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPoseRule()); }
	iv_rulePose=rulePose
	{ $current=$iv_rulePose.current; }
	EOF;

// Rule Pose
rulePose returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Pose'
		{
			newLeafNode(otherlv_0, grammarAccess.getPoseAccess().getPoseKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getPoseAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='value'
			{
				newLeafNode(otherlv_2, grammarAccess.getPoseAccess().getValueKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPoseAccess().getValueString0ParserRuleCall_2_1_0());
					}
					lv_value_3_0=ruleString0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPoseRule());
						}
						set(
							$current,
							"value",
							lv_value_3_0,
							"de.fraunhofer.ipa.geometry.Geometry.String0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='rpy'
		{
			newLeafNode(otherlv_4, grammarAccess.getPoseAccess().getRpyKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPoseAccess().getRpyString0ParserRuleCall_4_0());
				}
				lv_rpy_5_0=ruleString0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoseRule());
					}
					set(
						$current,
						"rpy",
						lv_rpy_5_0,
						"de.fraunhofer.ipa.geometry.Geometry.String0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='xyz'
		{
			newLeafNode(otherlv_6, grammarAccess.getPoseAccess().getXyzKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPoseAccess().getXyzString0ParserRuleCall_6_0());
				}
				lv_xyz_7_0=ruleString0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoseRule());
					}
					set(
						$current,
						"xyz",
						lv_xyz_7_0,
						"de.fraunhofer.ipa.geometry.Geometry.String0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getPoseAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleGeometry
entryRuleGeometry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeometryRule()); }
	iv_ruleGeometry=ruleGeometry
	{ $current=$iv_ruleGeometry.current; }
	EOF;

// Rule Geometry
ruleGeometry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGeometryAccess().getGeometryAction_0(),
					$current);
			}
		)
		otherlv_1='Geometry'
		{
			newLeafNode(otherlv_1, grammarAccess.getGeometryAccess().getGeometryKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getGeometryAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='box'
			{
				newLeafNode(otherlv_3, grammarAccess.getGeometryAccess().getBoxKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getBoxBoxParserRuleCall_3_1_0());
					}
					lv_box_4_0=ruleBox
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"box",
							lv_box_4_0,
							"de.fraunhofer.ipa.geometry.Geometry.Box");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='cylinder'
			{
				newLeafNode(otherlv_5, grammarAccess.getGeometryAccess().getCylinderKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getCylinderCylinderParserRuleCall_4_1_0());
					}
					lv_cylinder_6_0=ruleCylinder
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"cylinder",
							lv_cylinder_6_0,
							"de.fraunhofer.ipa.geometry.Geometry.Cylinder");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='mesh'
			{
				newLeafNode(otherlv_7, grammarAccess.getGeometryAccess().getMeshKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getMeshMeshParserRuleCall_5_1_0());
					}
					lv_mesh_8_0=ruleMesh
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"mesh",
							lv_mesh_8_0,
							"de.fraunhofer.ipa.geometry.Geometry.Mesh");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='sphere'
			{
				newLeafNode(otherlv_9, grammarAccess.getGeometryAccess().getSphereKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeometryAccess().getSphereSphereParserRuleCall_6_1_0());
					}
					lv_sphere_10_0=ruleSphere
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeometryRule());
						}
						set(
							$current,
							"sphere",
							lv_sphere_10_0,
							"de.fraunhofer.ipa.geometry.Geometry.Sphere");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getGeometryAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleString0
entryRuleString0 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getString0Rule()); }
	iv_ruleString0=ruleString0
	{ $current=$iv_ruleString0.current.getText(); }
	EOF;

// Rule String0
ruleString0 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='String'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getString0Access().getStringKeyword());
	}
;

// Entry rule entryRuleBox
entryRuleBox returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoxRule()); }
	iv_ruleBox=ruleBox
	{ $current=$iv_ruleBox.current; }
	EOF;

// Rule Box
ruleBox returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Box'
		{
			newLeafNode(otherlv_0, grammarAccess.getBoxAccess().getBoxKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getBoxAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='x'
		{
			newLeafNode(otherlv_2, grammarAccess.getBoxAccess().getXKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBoxAccess().getXDouble0ParserRuleCall_3_0());
				}
				lv_x_3_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoxRule());
					}
					set(
						$current,
						"x",
						lv_x_3_0,
						"de.fraunhofer.ipa.geometry.Geometry.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='y'
		{
			newLeafNode(otherlv_4, grammarAccess.getBoxAccess().getYKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBoxAccess().getYDouble0ParserRuleCall_5_0());
				}
				lv_y_5_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoxRule());
					}
					set(
						$current,
						"y",
						lv_y_5_0,
						"de.fraunhofer.ipa.geometry.Geometry.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='z'
		{
			newLeafNode(otherlv_6, grammarAccess.getBoxAccess().getZKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBoxAccess().getZDouble0ParserRuleCall_7_0());
				}
				lv_z_7_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoxRule());
					}
					set(
						$current,
						"z",
						lv_z_7_0,
						"de.fraunhofer.ipa.geometry.Geometry.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getBoxAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleCylinder
entryRuleCylinder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCylinderRule()); }
	iv_ruleCylinder=ruleCylinder
	{ $current=$iv_ruleCylinder.current; }
	EOF;

// Rule Cylinder
ruleCylinder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Cylinder'
		{
			newLeafNode(otherlv_0, grammarAccess.getCylinderAccess().getCylinderKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCylinderAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='length'
		{
			newLeafNode(otherlv_2, grammarAccess.getCylinderAccess().getLengthKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCylinderAccess().getLengthDouble0ParserRuleCall_3_0());
				}
				lv_length_3_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCylinderRule());
					}
					set(
						$current,
						"length",
						lv_length_3_0,
						"de.fraunhofer.ipa.geometry.Geometry.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='radius'
		{
			newLeafNode(otherlv_4, grammarAccess.getCylinderAccess().getRadiusKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCylinderAccess().getRadiusDouble0ParserRuleCall_5_0());
				}
				lv_radius_5_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCylinderRule());
					}
					set(
						$current,
						"radius",
						lv_radius_5_0,
						"de.fraunhofer.ipa.geometry.Geometry.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getCylinderAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleMesh
entryRuleMesh returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMeshRule()); }
	iv_ruleMesh=ruleMesh
	{ $current=$iv_ruleMesh.current; }
	EOF;

// Rule Mesh
ruleMesh returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Mesh'
		{
			newLeafNode(otherlv_0, grammarAccess.getMeshAccess().getMeshKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMeshAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='filename'
		{
			newLeafNode(otherlv_2, grammarAccess.getMeshAccess().getFilenameKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMeshAccess().getFilenameString0ParserRuleCall_3_0());
				}
				lv_filename_3_0=ruleString0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMeshRule());
					}
					set(
						$current,
						"filename",
						lv_filename_3_0,
						"de.fraunhofer.ipa.geometry.Geometry.String0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='scale'
			{
				newLeafNode(otherlv_4, grammarAccess.getMeshAccess().getScaleKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMeshAccess().getScaleDouble0ParserRuleCall_4_1_0());
					}
					lv_scale_5_0=ruleDouble0
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMeshRule());
						}
						set(
							$current,
							"scale",
							lv_scale_5_0,
							"de.fraunhofer.ipa.geometry.Geometry.Double0");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getMeshAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSphere
entryRuleSphere returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSphereRule()); }
	iv_ruleSphere=ruleSphere
	{ $current=$iv_ruleSphere.current; }
	EOF;

// Rule Sphere
ruleSphere returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sphere'
		{
			newLeafNode(otherlv_0, grammarAccess.getSphereAccess().getSphereKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSphereAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='radius'
		{
			newLeafNode(otherlv_2, grammarAccess.getSphereAccess().getRadiusKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSphereAccess().getRadiusDouble0ParserRuleCall_3_0());
				}
				lv_radius_3_0=ruleDouble0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSphereRule());
					}
					set(
						$current,
						"radius",
						lv_radius_3_0,
						"de.fraunhofer.ipa.geometry.Geometry.Double0");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSphereAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall());
	}
;

// Entry rule entryRuleDouble0
entryRuleDouble0 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDouble0Rule()); }
	iv_ruleDouble0=ruleDouble0
	{ $current=$iv_ruleDouble0.current.getText(); }
	EOF;

// Rule Double0
ruleDouble0 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_DOUBLE_0=RULE_DOUBLE
	{
		$current.merge(this_DOUBLE_0);
	}
	{
		newLeafNode(this_DOUBLE_0, grammarAccess.getDouble0Access().getDOUBLETerminalRuleCall());
	}
;

fragment RULE_DIGIT : '0'..'9';

RULE_BOOLEAN : ('true'|'false');

RULE_DOUBLE : RULE_DECINT ('.' RULE_DIGIT*|('.' RULE_DIGIT*)? ('E'|'e') ('-'|'+')? RULE_DECINT);

RULE_DECINT : ('0'|'1'..'9' RULE_DIGIT*|'-' '0'..'9' RULE_DIGIT*);

RULE_JOINTTYPE : ('revolute'|'continuous'|'prismatic'|'fixed'|'floating'|'planar');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
